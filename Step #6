# Step 3: Pre-test - Define the function testDNSBlock()
function testDNSBlock {
    # Output the original DNS server of Ethernet 3 NIC
    $originalDnsServer = Get-DnsClientServerAddress -InterfaceAlias "Ethernet 3" |
                         Select-Object -ExpandProperty ServerAddresses

    Write-Output "Original DNS Server: $originalDnsServer"

    # Determine the IP address of malware.testcategory.com
    try {
        $malwareHost = "malware.testcategory.com"
        $malwareIp = [System.Net.Dns]::GetHostAddresses($malwareHost) |
                     Select-Object -ExpandProperty IPAddressToString

        if ($malwareIp -contains "0.0.0.0") {
            Write-Output "DNS filtering is active."
        } else {
            Write-Output "DNS filtering is not active. Malware IP: $($malwareIp -join ', ')"
        }

    } catch {
        Write-Output "Unable to resolve malware host."
    }
}

# Step 5: Enable DNS over HTTPS (DoH) on Windows 11
function enableDoH {
    # Set the EnableAutoDoH registry value to 2
    Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters" -Name "EnableAutoDoH" -Value 2

    Write-Output "DNS over HTTPS (DoH) enabled. Rebooting the computer..."

    # Initiate a system reboot
    Restart-Computer -Force
}

# Step 6: Setup Quad DoH
function setupQuadDoH {
    $interfaceAlias = "Ethernet 3"
    $dnsServer = "1.1.1.2"
    $dnsQueryUri = "https://security.cloudflare-dns.com/dns-query"
    
    # Change DNS server of Ethernet 3 to Cloudflare's DNS server
    Set-DnsClientServerAddress -InterfaceAlias $interfaceAlias -ServerAddresses $dnsServer

    # Register the DoH template
    $doHServer = Add-DnsClientDohServerAddress -ServerAddress $dnsServer -Uri $dnsQueryUri -AutoUpgrade $true

    # Enable DoH on Ethernet 3 using the registry
    $interfaceGuid = (Get-NetAdapter -InterfaceAlias $interfaceAlias).InterfaceGuid
    $registryPath = "HKLM:\System\CurrentControlSet\Services\Dnscache\InterfaceSpecificParameters\$interfaceGuid\DohInterfaceSettings\Doh\$dnsServer"
    Set-ItemProperty -Path $registryPath -Name "DohFlags" -Value 1

    Write-Output "Quad DoH setup completed."
    Write-Output "DoH Server: $($doHServer.InterfaceAlias) - $dnsServer"
    Write-Output "DoH Query URI: $dnsQueryUri"
}
# Main script

# Check the first argument and perform corresponding action
$argument = $args[0]

if ($argument -eq "DoH-test") {
    testDNSBlock
} elseif ($argument -eq "DoH-enable") {
    enableDoH
} elseif ($argument -eq "DoH-setupQuad") {
    setupQuadDoH
}
